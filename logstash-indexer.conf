# Where to get input
input {
  # Redis queue input
  redis {
    data_type => "list"
    host      => "REDIS_HOST"
    key       => "logstash"
    port      => 6379
    tags      => ["redis"]
  }

  # Kafka queue input
#  kafka {
#    consumer_threads => 1
#    consumer_restart_sleep_ms => 100
#    decorate_events => true
#    group_id => "logs"
#    topic_id => "logstash"
   # zk_connect => ["localhost:2181"]
#    zk_connect => ["ZK_CONN_STR"]
#  }
}

# Some Filtering
filter {
  # syslog filter
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    syslog_pri { }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }

    if !("_grokparsefailure" in [tags]) {
      mutate {
        replace => [ "message", "%{syslog_message}" ]
      }

      mutate {
        remove_field => [  "syslog_message" ]
      }
    }

    # Remove spurious fields that have names changed or been aggregated
    mutate {
      remove_field => [ "syslog_hostname", "syslog_timestamp" ]
    }
  }

  # systemd/journal filter (CoreOS)
  if [type] == "systemd" {
    mutate { rename => [ "MESSAGE", "message" ] }
    mutate { rename => [ "_SYSTEMD_UNIT", "program" ] }
  }

  # Docker filter
  if [tags] == "docker" {
    json {
      source => "message"
    }
    mutate {
      rename => [ "log", "message" ]
    }
    date {
      match => [ "time", "ISO8601" ]
    }
  }
}

# Where to send output
output {
  # Parse failed messages to separate index
  if "_grokparsefailure" in [tags] {
    elasticsearch {
    # host => ["localhost:9200"]
      host => ["ES_CONN_STR"]
      index => "parse-err-%{+YYYY.MM.dd}"
      protocol  => "http"
    }
  }

# Elasticsearch output
  elasticsearch {
  # host => ["localhost:9200"]
    host => ["ES_CONN_STR"]
    index => "logstash-%{+YYYY.MM.dd}"
    protocol  => "http"
  }
}
